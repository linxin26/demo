package co.solinx.leetCode.RemoveDuplicatesSortedArray;

import java.util.ArrayList;
import java.util.Arrays;

/**
 * Created by linx on 2015/9/6.
 */
public class Solution {


    public static void main(String[] args){

        int[] data=new int[]{9878,9879,9879,9880,9880,9881,9881,9882,9882,9883,9883,9884,9884,9885,9885,9886,9886,9887,9887,9888,9888,9889,9889,9890,9890,9891,9891,9892,9892,9893,9893,9894,9894,9895,9895,9896,9896,9897,9897,9898,9898,9899,9899,9900,9900,9901,9901,9902,9902,9903,9903,9904,9904,9905,9905,9906,9906,9907,9907,9908,9908,9909,9909,9910,9910,9911,9911,9912,9912,9913,9913,9914,9914,9915,9915,9916,9916,9917,9917,9918,9918,9919,9919,9920,9920,9921,9921,9922,9922,9923,9923,9924,9924,9925,9925,9926,9926,9927,9927,9928,9928,9929,9929,9930,9930,9931,9931,9932,9932,9933,9933,9934,9934,9935,9935,9936,9936,9937,9937,9938,9938,9939,9939,9940,9940,9941,9941,9942,9942,9943,9943,9944,9944,9945,9945,9946,9946,9947,9947,9948,9948,9949,9949,9950,9950,9951,9951,9952,9952,9953,9953,9954,9954,9955,9955,9956,9956,9957,9957,9958,9958,9959,9959,9960,9960,9961,9961,9962,9962,9963,9963,9964,9964,9965,9965,9966,9966,9967,9967,9968,9968,9969,9969,9970,9970,9971,9971,9972,9972,9973,9973,9974,9974,9975,9975,9976,9976,9977,9977,9978,9978,9979,9979,9980,9980,9981,9981,9982,9982,9983,9983,9984,9984,9985,9985,9986,9986,9987,9987,9988,9988,9989,9989,9990,9990,9991,9991,9992,9992,9993,9993,9994,9994,9995,9995,9996,9996,9997,9997,9998,9998,9999,9999,9878,9879,9879,9880,9880,9881,9881,9882,9882,9883,9883,9884,9884,9885,9885,9886,9886,9887,9887,9888,9888,9889,9889,9890,9890,9891,9891,9892,9892,9893,9893,9894,9894,9895,9895,9896,9896,9897,9897,9898,9898,9899,9899,9900,9900,9901,9901,9902,9902,9903,9903,9904,9904,9905,9905,9906,9906,9907,9907,9908,9908,9909,9909,9910,9910,9911,9911,9912,9912,9913,9913,9914,9914,9915,9915,9916,9916,9917,9917,9918, 9918,9919,9919,9920,9920,9921,9921,9922,9922,9923,9923,9924,9924,9925,9925,9926,9926,9927,9927,9928,9928,9929,9929,9930,9930,9931,9931,9932,9932,9933,9933,9934,9934,9935,9935,9936,9936,9937,9937,9938,9938,9939,9939,9940,9940,9941,9941,9942,9942,9943,9943,9944,9944,9945,9945,9946,9946,9947,9947,9948,9948,9949,9949,9950,9950,9951,9951,9952,9952,9953,9953,9954,9954,9955,9955,9956,9956,9957,9957,9958,9958,9959,9959,9960,9960,9961,9961,9962,9962,9963,9963,9964,9964,9965,9965,9966,9966,9967,9967,9968,9968,9969,9969,9970,9970,9971,9971,9972,9972,9973,9973,9974,9974,9975,9975,9976,9976,9977,9977,9978,9978,9979,9979,9980,9980,9981,9981,9982,9982,9983,9983,9984,9984,9985,9985,9986,9986,9987,9987,9988,9988,9989,9989,9990,9990,9991,9991,9992,9992,9993,9993,9994,9994,9995,9995,9996,9996,9997,9997,9998,9998,9999,9999};
        Solution solution=new Solution();
//        int len= Solution.removeDuplicates(data);
        long startTime=System.currentTimeMillis();
        System.out.println(solution.solution2(data));
        long endTime=System.currentTimeMillis();
        System.out.println(endTime-startTime);


        System.out.println(Arrays.toString(data));
//        System.out.println(len);
    }


    public int removeDuplicates(int[] nums){

        for (int i = 0; i < nums.length; i++) {

        }

        return 0;
    }


    public boolean checkDuplicate(int first,int two){
        boolean result=false;
        if(first==two){
            result=true;
        }
        return result;
    }


    public int removeDuplicates2(int[] nums) {
        boolean duplicate=false;
        int[] temp=new int[nums.length];
        int x=0;
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j < temp.length; j++) {
                if (nums[i]==temp[j]){
                    duplicate=true;
                }
            }
            if(!duplicate){
                temp[x++]=nums[i];
            }
            duplicate=false;
        }

        for (int i = 0; i < x; i++) {
            nums[i]=temp[i];
        }
        if(x==0&&nums.length>0){
            x=1;
        }
        return x;
    }

    public int solution2(int [] nums){
        ArrayList temp=new ArrayList();
        for (int i = 0; i < nums.length; i++) {
            if(!temp.contains(nums[i])){
                temp.add(nums[i]);
            }
        }
        System.out.println(Arrays.toString(temp.toArray()));
        for (int i = 0; i < temp.size(); i++) {
            nums[i]= (int) temp.get(i);
        }
        return temp.size();
    }

}
